[{"D:\\radioelectronicsStore\\client\\src\\index.js":"1","D:\\radioelectronicsStore\\client\\src\\App.js":"2","D:\\radioelectronicsStore\\client\\src\\store\\UserStore.js":"3","D:\\radioelectronicsStore\\client\\src\\store\\DeviceStore.js":"4","D:\\radioelectronicsStore\\client\\src\\http\\userAPI.js":"5","D:\\radioelectronicsStore\\client\\src\\components\\NavBar.js":"6","D:\\radioelectronicsStore\\client\\src\\components\\AppRouter.js":"7","D:\\radioelectronicsStore\\client\\src\\routes.js":"8","D:\\radioelectronicsStore\\client\\src\\http\\index.js":"9","D:\\radioelectronicsStore\\client\\src\\utils\\consts.js":"10","D:\\radioelectronicsStore\\client\\src\\pages\\DevicePage.js":"11","D:\\radioelectronicsStore\\client\\src\\http\\deviceAPI.js":"12","D:\\radioelectronicsStore\\client\\src\\pages\\Auth.js":"13","D:\\radioelectronicsStore\\client\\src\\pages\\Shop.js":"14","D:\\radioelectronicsStore\\client\\src\\pages\\Admin.js":"15","D:\\radioelectronicsStore\\client\\src\\pages\\Basket.js":"16","D:\\radioelectronicsStore\\client\\src\\components\\DeviceList.js":"17","D:\\radioelectronicsStore\\client\\src\\components\\TypeBar.js":"18","D:\\radioelectronicsStore\\client\\src\\components\\BrandBar.js":"19","D:\\radioelectronicsStore\\client\\src\\components\\Pages.js":"20","D:\\radioelectronicsStore\\client\\src\\components\\modals\\CreateBrand.js":"21","D:\\radioelectronicsStore\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\radioelectronicsStore\\client\\src\\components\\modals\\CreateType.js":"23","D:\\radioelectronicsStore\\client\\src\\components\\DeviceItem.js":"24","D:\\radioelectronicsStore\\client\\src\\utils\\handleLogin.js":"25","D:\\radioelectronicsStore\\client\\src\\http\\basketAPI.js":"26","D:\\radioelectronicsStore\\client\\src\\store\\BasketStore.js":"27"},{"size":508,"mtime":1732313520969,"results":"28","hashOfConfig":"29"},{"size":870,"mtime":1732318275454,"results":"30","hashOfConfig":"29"},{"size":401,"mtime":1732244916825,"results":"31","hashOfConfig":"29"},{"size":1298,"mtime":1611985807000,"results":"32","hashOfConfig":"29"},{"size":848,"mtime":1732323145444,"results":"33","hashOfConfig":"29"},{"size":2584,"mtime":1732326131683,"results":"34","hashOfConfig":"29"},{"size":744,"mtime":1732323551808,"results":"35","hashOfConfig":"29"},{"size":774,"mtime":1611985807000,"results":"36","hashOfConfig":"29"},{"size":407,"mtime":1611985807000,"results":"37","hashOfConfig":"29"},{"size":228,"mtime":1611985807000,"results":"38","hashOfConfig":"29"},{"size":2409,"mtime":1732313812725,"results":"39","hashOfConfig":"29"},{"size":995,"mtime":1611985807000,"results":"40","hashOfConfig":"29"},{"size":2950,"mtime":1732323256423,"results":"41","hashOfConfig":"29"},{"size":1538,"mtime":1611985807000,"results":"42","hashOfConfig":"29"},{"size":1549,"mtime":1611985807000,"results":"43","hashOfConfig":"29"},{"size":1802,"mtime":1732314610613,"results":"44","hashOfConfig":"29"},{"size":491,"mtime":1611985807000,"results":"45","hashOfConfig":"29"},{"size":752,"mtime":1611985807000,"results":"46","hashOfConfig":"29"},{"size":759,"mtime":1611985807000,"results":"47","hashOfConfig":"29"},{"size":801,"mtime":1611985807000,"results":"48","hashOfConfig":"29"},{"size":1372,"mtime":1611985807000,"results":"49","hashOfConfig":"29"},{"size":6111,"mtime":1611985807000,"results":"50","hashOfConfig":"29"},{"size":1355,"mtime":1611985807000,"results":"51","hashOfConfig":"29"},{"size":1090,"mtime":1611985807000,"results":"52","hashOfConfig":"29"},{"size":369,"mtime":1732323163773,"results":"53","hashOfConfig":"29"},{"size":428,"mtime":1732315394873,"results":"54","hashOfConfig":"29"},{"size":2459,"mtime":1732316618000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1yo0oko",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\radioelectronicsStore\\client\\src\\index.js",[],["119","120"],"D:\\radioelectronicsStore\\client\\src\\App.js",["121"],"import React, { useContext, useEffect, useState } from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport AppRouter from './components/AppRouter'\nimport NavBar from './components/NavBar'\nimport { observer } from 'mobx-react-lite'\nimport { Context } from './index'\nimport { check } from './http/userAPI'\nimport { Spinner } from 'react-bootstrap'\n\nconst App = observer(() => {\n  const { user, basket } = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check()\n      .then((data) => {\n        user.setUser(data)\n        user.setIsAuth(true)\n        basket.fetchBasketDevices()\n      })\n      .finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return <Spinner animation={'grow'} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  )\n})\n\nexport default App\n","D:\\radioelectronicsStore\\client\\src\\store\\UserStore.js",[],"D:\\radioelectronicsStore\\client\\src\\store\\DeviceStore.js",[],"D:\\radioelectronicsStore\\client\\src\\http\\userAPI.js",[],"D:\\radioelectronicsStore\\client\\src\\components\\NavBar.js",[],"D:\\radioelectronicsStore\\client\\src\\components\\AppRouter.js",[],"D:\\radioelectronicsStore\\client\\src\\routes.js",[],"D:\\radioelectronicsStore\\client\\src\\http\\index.js",[],"D:\\radioelectronicsStore\\client\\src\\utils\\consts.js",[],"D:\\radioelectronicsStore\\client\\src\\pages\\DevicePage.js",["122"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap'\nimport bigStar from '../assets/bigStar.png'\nimport { useParams } from 'react-router-dom'\nimport { fetchOneDevice } from '../http/deviceAPI'\nimport { Context } from '../index'\n\nconst DevicePage = () => {\n  const [device, setDevice] = useState({ info: [] })\n  const { id } = useParams()\n  const { basket } = useContext(Context)\n\n  useEffect(() => {\n    fetchOneDevice(id).then((data) => setDevice(data))\n  }, [])\n\n  const handleAddToBasket = async () => {\n    basket.addDevice(device.id)\n  }\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col md={4}>\n          <Image\n            width={300}\n            height={300}\n            src={process.env.REACT_APP_API_URL + device.img}\n          />\n        </Col>\n        <Col md={4}>\n          <Row className=\"d-flex flex-column align-items-center\">\n            <h2>{device.name}</h2>\n            <div\n              className=\"d-flex align-items-center justify-content-center\"\n              style={{\n                background: `url(${bigStar}) no-repeat center center`,\n                width: 240,\n                height: 240,\n                backgroundSize: 'cover',\n                fontSize: 64,\n              }}\n            >\n              {device.rating}\n            </div>\n          </Row>\n        </Col>\n        <Col md={4}>\n          <Card\n            className=\"d-flex flex-column align-items-center justify-content-around\"\n            style={{\n              width: 300,\n              height: 300,\n              fontSize: 32,\n              border: '5px solid lightgray',\n            }}\n          >\n            <h3>От: {device.price} руб.</h3>\n            <Button variant={'outline-dark'} onClick={handleAddToBasket}>\n              Добавить в корзину\n            </Button>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"d-flex flex-column m-3\">\n        <h1>Характеристики</h1>\n        {device.info.map((info, index) => (\n          <Row\n            key={info.id}\n            style={{\n              background: index % 2 === 0 ? 'lightgray' : 'transparent',\n              padding: 10,\n            }}\n          >\n            {info.title}: {info.description}\n          </Row>\n        ))}\n      </Row>\n    </Container>\n  )\n}\n\nexport default DevicePage\n","D:\\radioelectronicsStore\\client\\src\\http\\deviceAPI.js",["123"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","D:\\radioelectronicsStore\\client\\src\\pages\\Auth.js",[],"D:\\radioelectronicsStore\\client\\src\\pages\\Shop.js",["124","125"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\radioelectronicsStore\\client\\src\\pages\\Admin.js",[],"D:\\radioelectronicsStore\\client\\src\\pages\\Basket.js",["126"],"import React, { useContext, useEffect } from 'react'\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap'\nimport { observer } from 'mobx-react-lite'\nimport { Context } from '../index'\n\nconst Basket = observer(() => {\n  const { basket } = useContext(Context)\n\n  useEffect(() => {\n    basket.fetchBasketDevices()\n  }, [])\n\n  const handleRemove = async (id) => {\n    basket.removeDevice(id)\n  }\n\n  return (\n    <Container className=\"mt-3\">\n      <h1>Корзина</h1>\n      {basket.basketDevices.length === 0 ? (\n        <h3>Ваша корзина пуста</h3>\n      ) : (\n        <>\n          {basket.basketDevices.map(({ id, device }) => (\n            <Row key={id} className=\"d-flex align-items-center mb-3\">\n              <Col md={2}>\n                <Image\n                  width={100}\n                  height={100}\n                  src={\n                    device?.img\n                      ? process.env.REACT_APP_API_URL + device.img\n                      : ''\n                  }\n                />\n              </Col>\n              <Col md={4}>{device.name}</Col>\n              <Col md={2}>{device.price} руб.</Col>\n              <Col md={2}>\n                <Button variant=\"danger\" onClick={() => handleRemove(id)}>\n                  Удалить\n                </Button>\n              </Col>\n            </Row>\n          ))}\n          <Row className=\"mt-4\">\n            <Col md={6}>\n              <h4>Итоговая сумма: {basket.totalPrice} руб.</h4>\n            </Col>\n            <Col md={{ span: 3, offset: 9 }}>\n              <Button variant=\"success\" className=\"w-100\">\n                Оформить заказ\n              </Button>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  )\n})\n\nexport default Basket\n","D:\\radioelectronicsStore\\client\\src\\components\\DeviceList.js",[],"D:\\radioelectronicsStore\\client\\src\\components\\TypeBar.js",["127"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\radioelectronicsStore\\client\\src\\components\\BrandBar.js",[],"D:\\radioelectronicsStore\\client\\src\\components\\Pages.js",[],"D:\\radioelectronicsStore\\client\\src\\components\\modals\\CreateBrand.js",["128"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\radioelectronicsStore\\client\\src\\components\\modals\\CreateDevice.js",["129","130"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\radioelectronicsStore\\client\\src\\components\\modals\\CreateType.js",[],"D:\\radioelectronicsStore\\client\\src\\components\\DeviceItem.js",[],"D:\\radioelectronicsStore\\client\\src\\utils\\handleLogin.js",[],"D:\\radioelectronicsStore\\client\\src\\http\\basketAPI.js",[],"D:\\radioelectronicsStore\\client\\src\\store\\BasketStore.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":22,"column":6,"nodeType":"137","endLine":22,"endColumn":8,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":15,"column":6,"nodeType":"137","endLine":15,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":18},{"ruleId":"135","severity":1,"message":"145","line":23,"column":8,"nodeType":"137","endLine":23,"endColumn":10,"suggestions":"146"},{"ruleId":"135","severity":1,"message":"145","line":30,"column":8,"nodeType":"137","endLine":30,"endColumn":65,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"148","line":11,"column":6,"nodeType":"137","endLine":11,"endColumn":8,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":11},{"ruleId":"141","severity":1,"message":"151","line":4,"column":22,"nodeType":"143","messageId":"144","endLine":4,"endColumn":32},{"ruleId":"141","severity":1,"message":"152","line":5,"column":36,"nodeType":"143","messageId":"144","endLine":5,"endColumn":48},{"ruleId":"135","severity":1,"message":"145","line":18,"column":8,"nodeType":"137","endLine":18,"endColumn":10,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basket' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["157"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["158"],["159"],"React Hook useEffect has a missing dependency: 'basket'. Either include it or remove the dependency array.",["160"],"'Col' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"166","fix":"172"},"Update the dependencies array to be: [basket, user]",{"range":"173","text":"174"},"Update the dependencies array to be: [id]",{"range":"175","text":"176"},"Update the dependencies array to be: [device]",{"range":"177","text":"178"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"179","text":"180"},"Update the dependencies array to be: [basket]",{"range":"181","text":"182"},{"range":"183","text":"178"},[685,687],"[basket, user]",[545,547],"[id]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[332,334],"[basket]",[747,749]]